<?xml version="1.0" encoding="UTF-8" ?>
<package>
	<id>com.cjl.InstrumentsDemo</id>
	<title>InstrumentsDemo</title>
	<owner>
		<name>CJL</name>
	</owner>
    
    <!-- MARK: 导入需要使用的schema   -->
    <import-schema>tick</import-schema>
    
    <!-- 开始构建一个 instrument  -->
    <instrument>
        <!-- MARK: 这个 Instrument 的基本信息 -->
        <!--  Instruments的唯一标识  -->
        <id>com.cjl.TickDemo</id>
        <!--  Instruments的描述性标题 -->
        <title>TickDemo</title>
        <!--  Instruments的类别  -->
        <category>Behavior</category>
        <!--  说明Instruments的具体用途  -->
        <purpose>tick demo</purpose>
        <!--  Instruments的图标 -->
        <icon>Generic</icon>
        
        <!-- MARK: 描述的表数据，将会由 分析核心 最终完成存储和解析提供给 标准界面 模块 -->
        <!-- 创建一个表, 这个表中使用到了 `tick`  -->
        <create-table>
            <!--  table 的唯一标识  -->
            <id>tick-table</id>
            <!-- 定义了每列的数据 -->
            <schema-ref>tick</schema-ref>
        </create-table>
        
        <!-- MARK: 图形视图上面展示（可选） -->
        <!-- 轨道视图 graph -->
        <graph>
            <title>Ticks</title>
            <lane>
                <title>Lane</title>
                <!-- 这里就是上面你定义的 table id-->
                <table-ref>tick-table</table-ref>
                
                <!-- 轨道视图显示的数据 -->
                <plot>
                    <value-from>time</value-from>
                </plot>
            </lane>
        </graph>
        
        <!-- MARK: 这里描述你需要展示在详情视图的数据 -->
        <!-- 详情视图 list -->
        <list>
            <title>Ticks</title>
            <!-- 这里就是上面你定义的 table id-->
            <table-ref>tick-table</table-ref>
            <column>time</column>
        </list>
    </instrument>

    <!-- Instruments Developer Help: https://help.apple.com/instruments/developer/mac/current/ -->

    <!-- MARK: Schema Definitions -->
    <!-- Define point and interval schemas needed to represent the input and output tables your package will use. -->
    <!-- Two kinds are available: schemas with automatically generated modelers, and schemas that require custom modelers -->
    <!--   Generated modelers: 'os-log-point-schema', 'os-signpost-interval-schema', 'ktrace-point-schema', 'ktrace-interval-schema' -->
    <!--   Custom modeler required: 'point-schema', 'interval-schema' -->
    <!-- To use existing schemas from other packages, declare 'import-schema' elements -->

    <!-- MARK: Modeler Declarations -->
    <!-- If there are schemas defined that require a custom modeler, each can be declared with a 'modeler' element -->
    <!-- Modelers are based on CLIPS rules and may define 1..n output schemas, each requiring 1..n input schemas -->

    <!-- MARK: Instrument Definitions -->
    <!-- Instruments record and display data, creating concrete table requirements that instance modelers and data streams. -->
    <!-- Any number of 'instrument' elements can be defined; each instrument should provide a cohesive graph and detail experience. -->

    <!-- MARK: Embed Templates -->
    <!-- Templates may be included and represent a collection of tools configured for a specific tracing workflow -->
    <!-- Each 'template' element specifies the relative path to a .tracetemplate file in the project -->
    <!-- To create a template: start with a blank document, configure with instruments desired, and choose "File -> Save as Template" -->
</package>
